<?xml version="1.0" encoding="UTF-8"?>
<!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
 scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
 debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <contextName>logback</contextName>
    <!-- 定义文件名称 -->
    <property name="project.name" value="config-server"/>
    <!-- 定义错误文件名称 -->
    <property name="error.name" value="error"/>
    <!-- 定义文件路径 -->
    <property name="log.path" value="logs/${project.name}/"/>
    <!-- 输出到控制台 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 输出到文件 -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <file>${log.path}${project.name}.log</file>
        <!-- 每天生成一个文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--设置日志命名模式 -->
            <fileNamePattern>${log.path}${project.name}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 日志达到 20MB 时，将会自动滚动，即原来的内容移动到 {project.name}.%d{yyyy-MM-dd}.%i.log 中 -->
            <maxFileSize>20MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>


    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <file>${log.path}${project.name}-${error.name}.log</file>
        <!-- 每天生成一个文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--设置日志命名模式 -->
            <fileNamePattern>${log.path}${project.name}-${error.name}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>20MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 配置单独输出路径 -->
    <logger name="error" level="info" additivity="false">
        <appender-ref ref="error"/>
        <appender-ref ref="console"/>
    </logger>

    <root level="info">
        <appender-ref ref="console"/>
        <appender-ref ref="file"/>
    </root>


</configuration>